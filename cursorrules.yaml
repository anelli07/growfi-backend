app:
  name: growfi
  description: >
    Full backend for personal finance app with AI assistant. Built using FastAPI, Python 3.11, PostgreSQL.
  language: python
  framework: fastapi
  database: postgresql
  docs:
    type: openapi
    path: /docs
    swagger_ui: true
  cors:
    allow_origins: ["http://localhost:3000", "http://localhost:8000", "https://app.growfi.space"] # Frontend URLs
    allow_credentials: true
    allow_methods: ["*"]
    allow_headers: ["*"]

models:
  User:
    fields:
      email: str
      hashed_password: str | null  # null for Google auth users
      salt: str
      is_email_verified: bool = false
      email_verification_token: str | null
      google_id: str | null
      refresh_token: str | null
      timezone: str = "UTC"
      last_expense_date: date | null
      last_reminder_sent: datetime | null
      created_at: datetime = now
      last_login: datetime = now

  Category:
    fields:
      user_id: foreignkey -> User
      name: str
      type: enum = ["expense", "income"]
      is_default: bool = false
      icon: str | null
      created_at: datetime = now

  Expense:
    fields:
      user_id: foreignkey -> User
      category_id: foreignkey -> Category
      amount: float
      note: str = ""
      date: datetime  # UTC
      created_at: datetime = now
      updated_at: datetime = now

  Income:
    fields:
      user_id: foreignkey -> User
      category_id: foreignkey -> Category
      amount: float
      source: str
      date: datetime  # UTC
      created_at: datetime = now
      updated_at: datetime = now

  Goal:
    fields:
      user_id: foreignkey -> User
      title: str
      target_amount: float
      current_amount: float = 0
      deadline: date
      status: enum = ["in_progress", "completed", "deleted"]
      last_reminder_sent: datetime | null
      created_at: datetime = now
      updated_at: datetime = now

  Vault:
    fields:
      user_id: foreignkey -> User
      name: str
      description: str = ""
      total_saved: float = 0
      target_amount: float
      growth_stage: int = 0  # 0-20 representing 5% increments
      last_deposit_date: datetime | null
      last_reminder_sent: datetime | null
      created_at: datetime = now
      updated_at: datetime = now

  VaultTransaction:
    fields:
      vault_id: foreignkey -> Vault
      user_id: foreignkey -> User
      amount: float
      type: enum = ["deposit", "withdrawal"]
      note: str = ""
      ai_confirmation: bool = false  # Whether AI approved withdrawal
      date: datetime  # UTC
      created_at: datetime = now

  AIMessage:
    fields:
      user_id: foreignkey -> User
      content: str
      role: enum = ["user", "assistant"]
      context_type: enum = ["general", "expense", "income", "goal", "vault"]
      context_id: int | null  # Reference to specific expense/income/goal/vault
      created_at: datetime = now

  NotificationSettings:
    fields:
      user_id: foreignkey -> User
      daily_reminder: bool = true
      daily_reminder_time: time = "20:00"
      goal_updates: bool = true
      vault_updates: bool = true
      ai_insights: bool = true
      created_at: datetime = now
      updated_at: datetime = now

  DefaultCategory:
    fields:
      name: str
      type: enum = ["expense", "income"]
      icon: str
      created_at: datetime = now

  Backup:
    fields:
      user_id: foreignkey -> User
      file_path: str
      size_bytes: int
      created_at: datetime = now

routes:
  # Auth routes
  - path: /auth/register
    method: post
    handler: auth.register

  - path: /auth/login
    method: post
    handler: auth.login

  - path: /auth/google
    method: post
    handler: auth.google_auth

  - path: /auth/verify-email/{token}
    method: get
    handler: auth.verify_email

  - path: /auth/refresh
    method: post
    handler: auth.refresh_token

  - path: /auth/logout
    method: post
    handler: auth.logout

  # Category routes
  - path: /categories
    method: get
    handler: category.list

  - path: /categories
    method: post
    handler: category.create

  - path: /categories/{id}
    method: put
    handler: category.update

  - path: /categories/{id}
    method: delete
    handler: category.delete

  # Expense routes
  - path: /expenses
    method: post
    handler: expense.create

  - path: /expenses/{id}
    method: put
    handler: expense.update

  - path: /expenses/{id}
    method: delete
    handler: expense.delete

  - path: /expenses
    method: get
    handler: expense.list

  # Income routes
  - path: /incomes
    method: post
    handler: income.create

  - path: /incomes/{id}
    method: put
    handler: income.update

  - path: /incomes/{id}
    method: delete
    handler: income.delete

  - path: /incomes
    method: get
    handler: income.list

  # Goal routes
  - path: /goals
    method: post
    handler: goal.create

  - path: /goals/{id}
    method: put
    handler: goal.update

  - path: /goals/{id}
    method: delete
    handler: goal.delete

  - path: /goals
    method: get
    handler: goal.list

  - path: /goals/{id}/complete
    method: post
    handler: goal.complete

  # Vault routes
  - path: /vaults
    method: post
    handler: vault.create

  - path: /vaults/{id}
    method: put
    handler: vault.update

  - path: /vaults/{id}
    method: delete
    handler: vault.delete

  - path: /vaults
    method: get
    handler: vault.list

  - path: /vaults/{id}/deposit
    method: post
    handler: vault.deposit

  - path: /vaults/{id}/withdraw
    method: post
    handler: vault.withdraw

  # AI routes
  - path: /ai/message
    method: post
    handler: ai.message

  - path: /ai/messages
    method: get
    handler: ai.list_messages

  - path: /ai/withdraw-confirmation
    method: post
    handler: ai.confirm_withdrawal

  # Analytics routes
  - path: /analytics/daily
    method: get
    handler: analytics.daily

  - path: /analytics/weekly
    method: get
    handler: analytics.weekly

  - path: /analytics/monthly
    method: get
    handler: analytics.monthly

  # Notification routes
  - path: /notifications/settings
    method: get
    handler: notifications.get_settings

  - path: /notifications/settings
    method: put
    handler: notifications.update_settings

  - path: /notifications/token
    method: post
    handler: notifications.register_device

# Settings and Configurations
settings:
  security:
    password_policy:
      min_length: 8
      require_digit: true
      require_letter: true
      no_spaces: true
      not_email_or_username: true
    rate_limits:
      - id: auth_register
        path: /auth/register
        method: post
        limit: 5
        period_hours: 1
        key: ip_or_email
      - id: auth_login
        path: /auth/login
        method: post
        limit: 10
        period_minutes: 10
        key: ip_or_email
      - id: ai_message
        path: /ai/message
        method: post
        limit: 30
        period_hours: 1
        key: user_id
      - id: vault_goal_creation
        paths: [/vaults, /goals]
        method: post
        limit: 60
        period_hours: 1
        key: user_id

  ai:
    provider: openai
    model: gpt-3.5-turbo
    temperature: 0.7
    max_tokens: 300
    chat_context_messages: 10
    forbidden_response: "–≠—Ç–æ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –º–æ–∏ –∑–∞–¥–∞—á–∏ üòå"
    prompts:
      analyze_expenses: "–¢—ã AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –±—é–¥–∂–µ—Ç—É. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–∞—Å—Ö–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π –∏ –≤—ã–¥–∞–π –∫—Ä–∞—Ç–∫–∏–π —Å–æ–≤–µ—Ç –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏."
      nlp_add_expense: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç —Å–≤–æ–∏ —Ç—Ä–∞—Ç—ã. –ò–∑–≤–ª–µ–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —Å—É–º–º—É –∏ —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è (–¥–æ—Ö–æ–¥/—Ä–∞—Å—Ö–æ–¥), –≤–µ—Ä–Ω–∏ –∫–∞–∫ JSON."
      savings_advice: "–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–ª—å –Ω–∞–∫–æ–ø–∏—Ç—å N‚Ç∏ –∑–∞ X –º–µ—Å—è—Ü–µ–≤. –ü—Ä–µ–¥–ª–æ–∂–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å —Å —É—á—ë—Ç–æ–º –µ–≥–æ —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–æ—Ö–æ–¥–∞ –∏ —Ç—Ä–∞—Ç."
      motivation: "–ü–æ–∑–¥—Ä–∞–≤—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–Ω –¥–æ—Å—Ç–∏–≥ {percent}% —Ü–µ–ª–∏. –ò—Å–ø–æ–ª—å–∑—É–π –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å—Ç–∏–ª—å –∏ —ç–º–æ–¥–∑–∏, –±–µ–∑ –ª–∏—à–Ω–µ–π –≤–æ–¥—ã."

  notifications:
    provider: firebase
    credentials_file: firebase-credentials.json
    default_time: "20:00"
    recommend_time_range: ["19:00", "21:00"]
    jobs:
      expense_income_reminder:
        time: "20:00"
      vault_reminder:
        interval_days: 3
        condition: "no_deposit"
      progress_reminder:
        triggers_percent: [50, 75, 90]
      ai_weekly_analysis:
        enabled: true
        day_of_week: "mon"
        time: "18:00"
        only_if_active: true
    templates:
      daily_reminders:
        - "–•–µ–π, –Ω–µ –∑–∞–±—É–¥—å –≤–Ω–µ—Å—Ç–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥—ã ‚Äî —è –∂–¥—É üìí"
        - "–î–∞–≤–∞–π –Ω–µ —Ç–µ—Ä—è—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å! –í–≤–µ–¥–∏ —Ö–æ—Ç—è –±—ã 1 —Ç—Ä–∞—Ç—É üí∏"
      goal_reminders:
        - "–û—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ {amount}‚Ç∏ –¥–æ —Ü–µ–ª–∏! –¢—ã –ø–æ—á—Ç–∏ —É —Ñ–∏–Ω–∏—à–∞ üèÅ"
        - "–í –∫–æ–ø–∏–ª–∫—É –Ω–µ –ø–æ—Å—Ç—É–ø–∞–ª–æ –¥–µ–Ω–µ–≥ {days} –¥–Ω—è. –ú–µ—á—Ç–∞ –≥—Ä—É—Å—Ç–∏—Ç üò¢"
      ai_insights:
        - "–¢—ã —Å—Ç–∞–ª —Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ {category} –Ω–∞ {percent}% –±–æ–ª—å—à–µ, —á–µ–º –≤ –ø—Ä–æ—à–ª–æ–º –º–µ—Å—è—Ü–µ"
      motivation:
        - "–ú–æ–π —Ö–æ–∑—è–∏–Ω —Ç–∞–∫–æ–π –±–æ–≥–∞—Ç—ã–π‚Ä¶ –∫–æ–ø–∏–ª–∫–∞ –∞–∂ —Ç—Ä–µ—â–∏—Ç üòé"
        - "–°–∫–æ—Ä–æ –Ω–∞–∫–æ–ø–∏–º –Ω–∞ –º–µ—á—Ç—É. –Ø —É–∂–µ –≥–æ—Ç–æ–≤–ª—é —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫–∏ üéÜ"
      analytics:
        - "–¢—ã —Å—Ç–∞–ª —Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ {category} –º–µ–Ω—å—à–µ –Ω–∞ {percent}%! –ü—Ä–æ–≥—Ä–µ—Å—Å! üçΩ"

  vault:
    growth_stages:
      - threshold: 0
        description: "–ú–∞–ª–µ–Ω—å–∫–∏–π —Ä–æ—Å—Ç–æ–∫ üå±"
      - threshold: 5
        description: "–ü–æ–¥—Ä–∞—Å—Ç–∞—é—â–∏–π —Ä–æ—Å—Ç–æ–∫ üåø"
      - threshold: 10
        description: "–ú–æ–ª–æ–¥–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ üå≤"
      - threshold: 15
        description: "–ö—Ä–µ–ø–∫–æ–µ –¥–µ—Ä–µ–≤–æ üå≥"
      - threshold: 20
        description: "–¶–≤–µ—Ç—É—â–µ–µ –¥–µ—Ä–µ–≤–æ üå∏"

  backup:
    schedule: "0 0 * * *"  # Daily at midnight
    retention_days: 30
    manual_creation: false
    storage:
      type: s3
      bucket: growfi-backups
      region: us-east-1

  monitoring:
    logging:
      level: INFO
      handlers:
        - type: file
          filename: logs/app.log
          max_bytes: 10485760  # 10MB
          backup_count: 5
    metrics_to_track:
      - users
      - goals
      - vaults
      - ai_requests
      - ai_tokens
      - expenses
      - incomes
      - errors_500
      - server_crashes

  cache:
    enabled: true
    ttl_seconds: 600
    keys:
      - categories
      - default_categories
      - metrics

  default_categories:
    expense:
      - name: "–ü—Ä–æ–¥—É–∫—Ç—ã"
        icon: "üõí"
      - name: "–ï–¥–∞ –≤–Ω–µ –¥–æ–º–∞"
        icon: "üçΩ"
      - name: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç"
        icon: "üöå"
      - name: "–ü–æ–∫—É–ø–∫–∏"
        icon: "üõç"
      - name: "–û–¥–µ–∂–¥–∞"
        icon: "üëï"
      - name: "–°–ø–æ—Ä—Ç"
        icon: "üèÉ"
      - name: "–ê–≤—Ç–æ"
        icon: "üöó"
      - name: "–î–æ–º"
        icon: "üè†"
      - name: "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"
        icon: "üéÆ"
      - name: "–£—Å–ª—É–≥–∏"
        icon: "üíá"
    income:
      - name: "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç"
        icon: "üè¶"
      - name: "–ö–æ—à–µ–ª–µ–∫"
        icon: "üëõ"

# Development & Deployment
devops:
  migrations:
    tool: alembic
    directory: alembic

  testing:
    framework: pytest
    critical_features:
      - auth:
        - register_user
        - login_user
        - refresh_token
        - google_auth
      - crud:
        - create_expense_income
        - list_user_items
        - delete_item
      - ai:
        - parse_expense_from_text
      - vault:
        - deposit_and_withdraw
        - check_growth_stage

  ci_cd:
    provider: github_actions
    workflow_file: .github/workflows/ci.yml
    pre_commit_hooks:
      - black
      - flake8

  documentation:
    readme_file: README.md
    deployment_guide:
      env_variables:
        - name: DATABASE_URL
          description: "PostgreSQL connection string"
          example: "postgresql://user:password@host:port/dbname"
        - name: JWT_SECRET_KEY
          description: "Secret key for signing JWT tokens"
        - name: REFRESH_TOKEN_EXPIRE_DAYS
          description: "Refresh token lifetime in days"
        - name: OPENAI_API_KEY
          description: "API key for OpenAI"
        - name: GOOGLE_CLIENT_ID
        - name: GOOGLE_CLIENT_SECRET
        - name: FIREBASE_CREDENTIALS_FILE
        - name: S3_BUCKET_NAME
        - name: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
      run_commands:
        - description: "Install dependencies"
          command: "pip install -r requirements.txt"
        - description: "Apply database migrations"
          command: "alembic upgrade head"
        - description: "Run the development server"
          command: "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
