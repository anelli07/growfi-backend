"""add goal notification fields

Revision ID: 50f972f85e70
Revises: 6418356e2303
Create Date: 2025-07-22 11:49:42.905869

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '50f972f85e70'
down_revision: Union[str, Sequence[str], None] = '6418356e2303'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('category_user_id_fkey', 'category', type_='foreignkey')
    op.create_foreign_key(None, 'category', 'user', ['user_id'], ['id'])
    op.drop_constraint('expense_category_id_fkey', 'expense', type_='foreignkey')
    op.drop_constraint('expense_user_id_fkey', 'expense', type_='foreignkey')
    op.drop_constraint('expense_wallet_id_fkey', 'expense', type_='foreignkey')
    op.create_foreign_key(None, 'expense', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'expense', 'category', ['category_id'], ['id'])
    op.create_foreign_key(None, 'expense', 'wallet', ['wallet_id'], ['id'])
    op.add_column('goal', sa.Column('reminder_period', sa.String(), nullable=True))
    op.add_column('goal', sa.Column('selected_weekday', sa.Integer(), nullable=True))
    op.add_column('goal', sa.Column('selected_month_day', sa.Integer(), nullable=True))
    op.add_column('goal', sa.Column('selected_time', sa.String(), nullable=True))
    op.drop_constraint('goal_user_id_fkey', 'goal', type_='foreignkey')
    op.create_foreign_key(None, 'goal', 'user', ['user_id'], ['id'])
    op.drop_constraint('income_category_id_fkey', 'income', type_='foreignkey')
    op.drop_constraint('income_user_id_fkey', 'income', type_='foreignkey')
    op.drop_constraint('income_wallet_id_fkey', 'income', type_='foreignkey')
    op.create_foreign_key(None, 'income', 'wallet', ['wallet_id'], ['id'])
    op.create_foreign_key(None, 'income', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'income', 'category', ['category_id'], ['id'])
    op.drop_constraint('transaction_user_id_fkey', 'transaction', type_='foreignkey')
    op.drop_constraint('transaction_from_wallet_id_fkey', 'transaction', type_='foreignkey')
    op.drop_constraint('transaction_to_goal_id_fkey', 'transaction', type_='foreignkey')
    op.drop_constraint('transaction_from_category_id_fkey', 'transaction', type_='foreignkey')
    op.drop_constraint('transaction_from_goal_id_fkey', 'transaction', type_='foreignkey')
    op.drop_constraint('transaction_to_wallet_id_fkey', 'transaction', type_='foreignkey')
    op.drop_constraint('transaction_to_category_id_fkey', 'transaction', type_='foreignkey')
    op.create_foreign_key(None, 'transaction', 'wallet', ['from_wallet_id'], ['id'])
    op.create_foreign_key(None, 'transaction', 'goal', ['to_goal_id'], ['id'])
    op.create_foreign_key(None, 'transaction', 'category', ['from_category_id'], ['id'])
    op.create_foreign_key(None, 'transaction', 'goal', ['from_goal_id'], ['id'])
    op.create_foreign_key(None, 'transaction', 'wallet', ['to_wallet_id'], ['id'])
    op.create_foreign_key(None, 'transaction', 'category', ['to_category_id'], ['id'])
    op.create_foreign_key(None, 'transaction', 'user', ['user_id'], ['id'])
    op.drop_constraint('wallet_user_id_fkey', 'wallet', type_='foreignkey')
    op.create_foreign_key(None, 'wallet', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'wallet', type_='foreignkey')
    op.create_foreign_key('wallet_user_id_fkey', 'wallet', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'transaction', type_='foreignkey')
    op.drop_constraint(None, 'transaction', type_='foreignkey')
    op.drop_constraint(None, 'transaction', type_='foreignkey')
    op.drop_constraint(None, 'transaction', type_='foreignkey')
    op.drop_constraint(None, 'transaction', type_='foreignkey')
    op.drop_constraint(None, 'transaction', type_='foreignkey')
    op.drop_constraint(None, 'transaction', type_='foreignkey')
    op.create_foreign_key('transaction_to_category_id_fkey', 'transaction', 'category', ['to_category_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('transaction_to_wallet_id_fkey', 'transaction', 'wallet', ['to_wallet_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('transaction_from_goal_id_fkey', 'transaction', 'goal', ['from_goal_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('transaction_from_category_id_fkey', 'transaction', 'category', ['from_category_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('transaction_to_goal_id_fkey', 'transaction', 'goal', ['to_goal_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('transaction_from_wallet_id_fkey', 'transaction', 'wallet', ['from_wallet_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('transaction_user_id_fkey', 'transaction', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'income', type_='foreignkey')
    op.drop_constraint(None, 'income', type_='foreignkey')
    op.drop_constraint(None, 'income', type_='foreignkey')
    op.create_foreign_key('income_wallet_id_fkey', 'income', 'wallet', ['wallet_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('income_user_id_fkey', 'income', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('income_category_id_fkey', 'income', 'category', ['category_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'goal', type_='foreignkey')
    op.create_foreign_key('goal_user_id_fkey', 'goal', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('goal', 'selected_time')
    op.drop_column('goal', 'selected_month_day')
    op.drop_column('goal', 'selected_weekday')
    op.drop_column('goal', 'reminder_period')
    op.drop_constraint(None, 'expense', type_='foreignkey')
    op.drop_constraint(None, 'expense', type_='foreignkey')
    op.drop_constraint(None, 'expense', type_='foreignkey')
    op.create_foreign_key('expense_wallet_id_fkey', 'expense', 'wallet', ['wallet_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('expense_user_id_fkey', 'expense', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('expense_category_id_fkey', 'expense', 'category', ['category_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'category', type_='foreignkey')
    op.create_foreign_key('category_user_id_fkey', 'category', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###
